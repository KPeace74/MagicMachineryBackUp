package com.kpeace74.magicmachinery.rituals;

import ibxm.Player;
import net.minecraft.block.Block;
import net.minecraft.block.BlockOre;
import net.minecraft.entity.effect.EntityLightningBolt;
import net.minecraft.entity.item.EntityItem;
import net.minecraft.entity.player.EntityPlayer;
import net.minecraft.entity.player.PlayerCapabilities;
import net.minecraft.init.Blocks;
import net.minecraft.init.Items;
import net.minecraft.item.Item;
import net.minecraft.item.ItemPickaxe;
import net.minecraft.item.ItemStack;
import net.minecraft.item.crafting.FurnaceRecipes;
import net.minecraft.tileentity.TileEntity;
import net.minecraft.tileentity.TileEntityFurnace;
import net.minecraft.util.AxisAlignedBB;
import net.minecraft.world.World;

import com.ibm.icu.util.InitialTimeZoneRule;
import com.kpeace74.magicmachinery.block.BlockTheStoneOfEnergization;
import com.kpeace74.magicmachinery.init.ModItems;

public class OreDouble {

	public static Block Ores[] = {Blocks.gold_ore, Blocks.iron_ore};
	public static Item Ingots[] = {Items.gold_ingot, Items.iron_ingot};
	ItemStack item;
	public boolean gb(int x, int y, int z, World world, Block ore) {
		if (world.getBlock(x, y, z).equals(ore)) {
			return true;
		} else {return false;}
	}
	
	public void rit(World world, int x, int y, int z, String dir) {
		int multiple;
		if (!world.isRemote) {
				if (dir == "North") {
			//	world.addWeatherEffect(new EntityLightningBolt(world, x, y+3, z)); world.addWeatherEffect(new EntityLightningBolt(world, x, y+3, z-6)); world.addWeatherEffect(new EntityLightningBolt(world, x-2, y+3, z-1)); world.addWeatherEffect(new EntityLightningBolt(world, x+2, y+3, z-1)); world.addWeatherEffect(new EntityLightningBolt(world, x-2, y+3, z-5)); world.addWeatherEffect(new EntityLightningBolt(world, x+2, y+3, z-5)); world.addWeatherEffect(new EntityLightningBolt(world, x-3, y+3, z-3)); world.addWeatherEffect(new EntityLightningBolt(world, x+3, y+3, z-3));
				} else if (dir == "East") {
					//world.addWeatherEffect(new EntityLightningBolt(world, x, y+3, z)); world.addWeatherEffect(new EntityLightningBolt(world, x+6, y+3, z)); world.addWeatherEffect(new EntityLightningBolt(world, x+1, y+3, z-2)); world.addWeatherEffect(new EntityLightningBolt(world, x+1, y+3, z+2)); world.addWeatherEffect(new EntityLightningBolt(world, x+5, y+3, z-2)); world.addWeatherEffect(new EntityLightningBolt(world, x+5, y+3, z+2)); world.addWeatherEffect(new EntityLightningBolt(world, x+3, y+3, z-3)); world.addWeatherEffect(new EntityLightningBolt(world, x+3, y+3, z+3));
					
					//--[[ world is the World, x is the x position of the block clicked, y th ypos, z the zpos. ]] --
					for (int i = -2; i <=2; i++){	//--[[ First two for loops used to run through the blocks behind it in a 5x5 square ]]--
						for (int o = 0; o < 6; o++) {
								if (!world.isAirBlock(x+o, y+i, z)) {
									Block block = world.getBlock(x+o, y+i, z);
									item = new ItemStack(block);
									if (FurnaceRecipes.smelting().getSmeltingResult(item) != null) {
										ItemStack drop = FurnaceRecipes.smelting().getSmeltingResult(item);
										world.setBlockToAir(x+o, y+i, z);
										world.spawnEntityInWorld(new EntityItem(world, x+o, y+i, z, drop));
									}
								}
						}
					}
					for (int po = -2; po <= 2; po++) {
						for (int pon = 2; pon <= 4; pon++) {
							if (!world.isAirBlock(x+pon, y+po, z-1));
								for (int n = 0; n < 2; n++) {
									if (gb(x+pon, y+po, z-1, world, Ores[n])) {
										world.setBlockToAir(x+pon, y+po, z-1);
										
										if (multiple == 100) {
											world.spawnEntityInWorld(new EntityItem(world, x+pon, y+po, z, new ItemStack(Ingots[n], 2 + 1)));
										} else {
											world.spawnEntityInWorld(new EntityItem(world, x+pon, y+po, z, new ItemStack(Ingots[n], 2)));
										}
									}
								}
							}
						}
					
				
				for (int po = -2; po <= 2; po++) {
					for (int pon = 2; pon <= 4; pon++) {
						if (!world.isAirBlock(x+pon, y+po, z+1));
							for (int n = 0; n < 2; n++) {
								if (gb(x+pon, y+po, z+1, world, Ores[n])) {
									world.setBlockToAir(x+pon, y+po, z+1);
									if (multiple == 100) {
										world.spawnEntityInWorld(new EntityItem(world, x+pon, y+po, z, new ItemStack(Ingots[n], 2 + 1)));
									} else {
										world.spawnEntityInWorld(new EntityItem(world, x+pon, y+po, z, new ItemStack(Ingots[n], 2)));
									}
								}
							}
						}
					}
				
				for (int p = -2; p <= 2; p++) {
					if (!world.isAirBlock(x+3, y+p, z-2)) {
						for (int n = 0; n < 2; n++) {
							if (gb(x+3, y+p, z-2, world, Ores[n])) {
								world.setBlockToAir(x+3, y+p, z-2);
								if (multiple == 100) {
									world.spawnEntityInWorld(new EntityItem(world, x, y+p, z, new ItemStack(Ingots[n], 2 + 1)));
								} else {
									world.spawnEntityInWorld(new EntityItem(world, x, y+p, z, new ItemStack(Ingots[n], 2)));
								}
							}
						}
					}
				}
				
				for (int p = -2; p <= 2; p++) {
					if (!world.isAirBlock(x+3, y+p, z+2)) {
						for (int n = 0; n < 2; n++) {
							if (gb(x+3, y+p, z+2, world, Ores[n])) {
								world.setBlockToAir(x+3, y+p, z+2);
								if (multiple == 100) {
									world.spawnEntityInWorld(new EntityItem(world, x, y+p, z, new ItemStack(Ingots[n], 2 + 1)));
								} else {
									world.spawnEntityInWorld(new EntityItem(world, x, y+p, z, new ItemStack(Ingots[n], 2)));
								}
							}
						}
					}
				}
					
	
					
				} else if (dir == "South") { 
					world.addWeatherEffect(new EntityLightningBolt(world, x, y+3, z)); world.addWeatherEffect(new EntityLightningBolt(world, x, y+3, z+6)); world.addWeatherEffect(new EntityLightningBolt(world, x-2, y+3, z+1)); world.addWeatherEffect(new EntityLightningBolt(world, x+2, y+3, z+1)); world.addWeatherEffect(new EntityLightningBolt(world, x-2, y+3, z+5)); world.addWeatherEffect(new EntityLightningBolt(world, x+2, y+3, z+5)); world.addWeatherEffect(new EntityLightningBolt(world, x-3, y+3, z+3)); world.addWeatherEffect(new EntityLightningBolt(world, x+3, y+3, z+3));
					
					
					
					
				}else if (dir == "West") {
					world.addWeatherEffect(new EntityLightningBolt(world, x, y+3, z)); world.addWeatherEffect(new EntityLightningBolt(world, x-6, y+3, z)); world.addWeatherEffect(new EntityLightningBolt(world, x-1, y+3, z-2)); world.addWeatherEffect(new EntityLightningBolt(world, x-1, y+3, z+2)); world.addWeatherEffect(new EntityLightningBolt(world, x-5, y+3, z-2)); world.addWeatherEffect(new EntityLightningBolt(world, x-5, y+3, z+2)); world.addWeatherEffect(new EntityLightningBolt(world, x-3, y+3, z-3)); world.addWeatherEffect(new EntityLightningBolt(world, x-3, y+3, z+3));
					
					
					
				
				}
 		}

	}


	
	}

